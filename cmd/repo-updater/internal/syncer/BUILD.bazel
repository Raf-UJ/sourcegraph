load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//dev:go_defs.bzl", "go_test")

go_library(
    name = "syncer",
    srcs = [
        "metrics.go",
        "sync_errored.go",
        "sync_worker.go",
        "syncer.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/repo-updater/internal/syncer",
    visibility = ["//cmd/repo-updater:__subpackages__"],
    deps = [
        "//cmd/frontend/envvar",
        "//internal/actor",
        "//internal/api",
        "//internal/bytesize",
        "//internal/conf",
        "//internal/database",
        "//internal/database/basestore",
        "//internal/database/dbutil",
        "//internal/errcode",
        "//internal/extsvc",
        "//internal/extsvc/github",
        "//internal/goroutine",
        "//internal/licensing",
        "//internal/metrics",
        "//internal/observation",
        "//internal/ratelimit",
        "//internal/repos",
        "//internal/trace",
        "//internal/types",
        "//internal/workerutil",
        "//internal/workerutil/dbworker",
        "//internal/workerutil/dbworker/store",
        "//lib/errors",
        "@com_github_keegancsmith_sqlf//:sqlf",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_sourcegraph_log//:log",
        "@io_opentelemetry_go_otel//attribute",
        "@org_golang_x_sync//singleflight",
        "@org_golang_x_time//rate",
    ],
)

go_test(
    name = "syncer_test",
    srcs = [
        "sync_worker_test.go",
        "syncer_test.go",
    ],
    deps = [
        ":syncer",
        "//cmd/frontend/envvar",
        "//internal/api",
        "//internal/conf",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/extsvc",
        "//internal/extsvc/awscodecommit",
        "//internal/extsvc/bitbucketcloud",
        "//internal/extsvc/bitbucketserver",
        "//internal/extsvc/github",
        "//internal/extsvc/gitlab",
        "//internal/extsvc/gitolite",
        "//internal/goroutine",
        "//internal/licensing",
        "//internal/observation",
        "//internal/ratelimit",
        "//internal/repos",
        "//internal/timeutil",
        "//internal/types",
        "//internal/types/typestest",
        "//lib/errors",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_keegancsmith_sqlf//:sqlf",
        "@com_github_sourcegraph_log//:log",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_time//rate",
    ],
)
