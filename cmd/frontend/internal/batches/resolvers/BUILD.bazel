load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "resolvers",
    srcs = [
        "batch_change.go",
        "batch_change_connection.go",
        "batch_spec.go",
        "batch_spec_connection.go",
        "batch_spec_workspace.go",
        "batch_spec_workspace_connection.go",
        "batch_spec_workspace_file.go",
        "batch_spec_workspace_file_connection.go",
        "batch_spec_workspace_resolution.go",
        "batch_spec_workspace_step.go",
        "batch_spec_workspaces_stats.go",
        "bulk_operation.go",
        "bulk_operation_connection.go",
        "changeset.go",
        "changeset_apply_preview.go",
        "changeset_apply_preview_connection.go",
        "changeset_connection.go",
        "changeset_counts.go",
        "changeset_event.go",
        "changeset_event_connection.go",
        "changeset_job_error.go",
        "changeset_spec.go",
        "changeset_spec_connection.go",
        "changesets_stats.go",
        "code_host.go",
        "code_host_connection.go",
        "credential.go",
        "errors.go",
        "resolved_batch_spec_workspace.go",
        "resolver.go",
        "urls.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/frontend/internal/batches/resolvers",
    visibility = ["//cmd/frontend:__subpackages__"],
    deps = [
        "//cmd/frontend/enterprise",
        "//cmd/frontend/globals",
        "//cmd/frontend/graphqlbackend",
        "//cmd/frontend/graphqlbackend/externallink",
        "//cmd/frontend/graphqlbackend/graphqlutil",
        "//cmd/frontend/internal/auth/githubappauth",
        "//internal/actor",
        "//internal/api",
        "//internal/auth",
        "//internal/batches/graphql",
        "//internal/batches/reconciler",
        "//internal/batches/rewirer",
        "//internal/batches/search",
        "//internal/batches/service",
        "//internal/batches/state",
        "//internal/batches/store",
        "//internal/batches/syncer",
        "//internal/batches/types",
        "//internal/batches/types/scheduler/config",
        "//internal/conf",
        "//internal/database",
        "//internal/deviceid",
        "//internal/encryption",
        "//internal/errcode",
        "//internal/executor",
        "//internal/extsvc",
        "//internal/extsvc/auth",
        "//internal/extsvc/bitbucketserver",
        "//internal/extsvc/github",
        "//internal/featureflag",
        "//internal/github_apps/store",
        "//internal/github_apps/types",
        "//internal/gitserver",
        "//internal/gitserver/gitdomain",
        "//internal/gqlutil",
        "//internal/licensing",
        "//internal/rbac",
        "//internal/trace",
        "//internal/types",
        "//internal/usagestats",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/graph-gophers/graphql-go",
        "//vendor/github.com/graph-gophers/graphql-go/relay",
        "//vendor/github.com/sourcegraph/go-diff/diff",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/batches",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/batches/execution",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/go.opentelemetry.io/otel/attribute",
    ],
)

go_test(
    name = "resolvers_test",
    timeout = "moderate",
    srcs = [
        "batch_change_connection_test.go",
        "batch_change_test.go",
        "batch_spec_test.go",
        "batch_spec_workspace_file_connection_test.go",
        "batch_spec_workspace_file_test.go",
        "batch_spec_workspace_resolution_test.go",
        "batch_spec_workspace_step_test.go",
        "batch_spec_workspace_test.go",
        "bulk_operation_connection_test.go",
        "bulk_operation_test.go",
        "changeset_apply_preview_connection_test.go",
        "changeset_apply_preview_test.go",
        "changeset_connection_test.go",
        "changeset_counts_test.go",
        "changeset_event_connection_test.go",
        "changeset_spec_connection_test.go",
        "changeset_spec_test.go",
        "changeset_test.go",
        "changesets_stats_test.go",
        "code_host_connection_test.go",
        "credential_test.go",
        "main_test.go",
        "permissions_test.go",
        "resolver_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":resolvers"],
    tags = [
        # Test requires localhost database
        "requires-network",
    ],
    deps = [
        "//cmd/frontend/backend",
        "//cmd/frontend/globals",
        "//cmd/frontend/graphqlbackend",
        "//cmd/frontend/graphqlbackend/externallink",
        "//cmd/frontend/internal/auth/githubappauth",
        "//cmd/frontend/internal/batches/resolvers/apitest",
        "//internal/actor",
        "//internal/api",
        "//internal/batches/graphql",
        "//internal/batches/search",
        "//internal/batches/service",
        "//internal/batches/sources",
        "//internal/batches/state",
        "//internal/batches/store",
        "//internal/batches/syncer",
        "//internal/batches/testing",
        "//internal/batches/types",
        "//internal/conf",
        "//internal/database",
        "//internal/database/dbtest",
        "//internal/encryption",
        "//internal/encryption/testing",
        "//internal/extsvc",
        "//internal/extsvc/auth",
        "//internal/extsvc/github",
        "//internal/gitserver",
        "//internal/gitserver/gitdomain",
        "//internal/gqlutil",
        "//internal/httptestutil",
        "//internal/license",
        "//internal/licensing",
        "//internal/observation",
        "//internal/ratelimit",
        "//internal/rbac",
        "//internal/rcache",
        "//internal/repos",
        "//internal/repoupdater",
        "//internal/repoupdater/protocol",
        "//internal/timeutil",
        "//internal/types",
        "//schema",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/graph-gophers/graphql-go",
        "//vendor/github.com/graph-gophers/graphql-go/relay",
        "//vendor/github.com/inconshreveable/log15",
        "//vendor/github.com/keegancsmith/sqlf",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/batches",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/batches/overridable",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/batches/schema",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/batches/yaml",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/pointers",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/github.com/stretchr/testify/mock",
        "//vendor/github.com/stretchr/testify/require",
    ],
)
