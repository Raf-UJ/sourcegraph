load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "search",
    srcs = [
        "filter.go",
        "hybrid.go",
        "mmap.go",
        "mmap_windows.go",
        "pathmatch.go",
        "retry.go",
        "search.go",
        "search_grpc.go",
        "search_regex.go",
        "search_structural.go",
        "sender.go",
        "store.go",
        "zipcache.go",
        "zoekt_search.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/searcher/internal/search",
    visibility = ["//cmd/searcher:__subpackages__"],
    deps = [
        "//cmd/searcher/diff",
        "//cmd/searcher/protocol",
        "//internal/api",
        "//internal/comby",
        "//internal/conf",
        "//internal/conf/deploy",
        "//internal/diskcache",
        "//internal/errcode",
        "//internal/gitserver",
        "//internal/lazyregexp",
        "//internal/limiter",
        "//internal/metrics",
        "//internal/observation",
        "//internal/search",
        "//internal/search/backend",
        "//internal/search/casetransform",
        "//internal/search/searcher",
        "//internal/search/streaming/http",
        "//internal/search/zoekt",
        "//internal/searcher/v1:searcher",
        "//internal/trace",
        "//schema",
        "//vendor/github.com/RoaringBitmap/roaring",
        "//vendor/github.com/bmatcuk/doublestar",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/prometheus/client_golang/prometheus/promauto",
        "//vendor/github.com/sourcegraph/conc/pool",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/mountinfo",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/zoekt",
        "//vendor/github.com/sourcegraph/zoekt/ignore",
        "//vendor/github.com/sourcegraph/zoekt/query",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/go.uber.org/atomic",
        "//vendor/golang.org/x/sync/errgroup",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/status",
    ] + select({
        "@io_bazel_rules_go//go/platform:aix": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:illumos": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:js": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "//vendor/github.com/edsrzf/mmap-go",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "search_test",
    timeout = "short",
    srcs = [
        "filter_test.go",
        "github_archive_test.go",
        "hybrid_test.go",
        "pathmatch_test.go",
        "paxheader_110_test.go",
        "paxheader_19_test.go",
        "retry_test.go",
        "search_grpc_test.go",
        "search_regex_test.go",
        "search_structural_test.go",
        "search_test.go",
        "sender_test.go",
        "store_test.go",
        "zip_test.go",
        "zipcache_test.go",
        "zoekt_search_test.go",
    ],
    embed = [":search"],
    deps = [
        "//cmd/searcher/protocol",
        "//internal/api",
        "//internal/comby",
        "//internal/errcode",
        "//internal/gitserver",
        "//internal/grpc",
        "//internal/grpc/defaults",
        "//internal/observation",
        "//internal/search",
        "//internal/search/backend",
        "//internal/search/searcher",
        "//internal/searcher/v1:searcher",
        "//schema",
        "//vendor/github.com/RoaringBitmap/roaring",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/hexops/autogold/v2:autogold",
        "//vendor/github.com/sourcegraph/conc/pool",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/zoekt",
        "//vendor/github.com/sourcegraph/zoekt/cmd/zoekt-webserver/grpc/server",
        "//vendor/github.com/sourcegraph/zoekt/grpc/protos/zoekt/webserver/v1:webserver",
        "//vendor/github.com/sourcegraph/zoekt/query",
        "//vendor/github.com/sourcegraph/zoekt/web",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/golang.org/x/net/context/ctxhttp",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/status",
    ],
)
