load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "server",
    srcs = [
        "metrics.go",
        "migrate_events.go",
        "publish_events.go",
        "server.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/telemetry-gateway/internal/server",
    visibility = ["//cmd/telemetry-gateway:__subpackages__"],
    deps = [
        "//cmd/telemetry-gateway/internal/events",
        "//internal/licensing",
        "//internal/pubsub",
        "//internal/telemetrygateway/v1:telemetrygateway",
        "//internal/trace",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/go.opentelemetry.io/otel",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/go.opentelemetry.io/otel/metric",
        "//vendor/go.opentelemetry.io/otel/trace",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/status",
    ],
)

go_test(
    name = "server_test",
    srcs = [
        "migrate_events_test.go",
        "publish_events_test.go",
    ],
    embed = [":server"],
    deps = [
        "//cmd/telemetry-gateway/internal/events",
        "//internal/telemetrygateway/v1:telemetrygateway",
        "//vendor/github.com/hexops/autogold/v2:autogold",
        "//vendor/github.com/stretchr/testify/assert",
    ],
)
