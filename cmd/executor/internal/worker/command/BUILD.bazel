load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "command",
    srcs = [
        "command.go",
        "docker.go",
        "firecracker.go",
        "kubernetes.go",
        "observability.go",
        "shell.go",
        "util.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/executor/internal/worker/command",
    visibility = ["//cmd/executor:__subpackages__"],
    deps = [
        "//cmd/executor/internal/util",
        "//cmd/executor/internal/worker/cmdlogger",
        "//cmd/executor/internal/worker/files",
        "//internal/executor/types",
        "//internal/metrics",
        "//internal/observation",
        "//vendor/github.com/kballard/go-shellquote",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/golang.org/x/sync/errgroup",
        "//vendor/k8s.io/api/batch/v1:batch",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/api/resource",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/watch",
        "//vendor/k8s.io/client-go/kubernetes",
        "//vendor/k8s.io/utils/pointer",
    ],
)

go_test(
    name = "command_test",
    srcs = [
        "command_test.go",
        "docker_test.go",
        "firecracker_test.go",
        "kubernetes_test.go",
        "mocks_test.go",
        "shell_test.go",
        "util_test.go",
    ],
    embed = [":command"],
    deps = [
        "//cmd/executor/internal/util",
        "//cmd/executor/internal/worker/cmdlogger",
        "//cmd/executor/internal/worker/files",
        "//internal/executor",
        "//internal/executor/types",
        "//internal/observation",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/github.com/stretchr/testify/mock",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/k8s.io/api/batch/v1:batch",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/api/resource",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/watch",
        "//vendor/k8s.io/client-go/kubernetes/fake",
        "//vendor/k8s.io/client-go/testing",
        "//vendor/k8s.io/utils/pointer",
    ],
)
