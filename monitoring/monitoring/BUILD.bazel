load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "monitoring",
    srcs = [
        "aggregations.go",
        "dashboards.go",
        "doc.go",
        "documentation.go",
        "generator.go",
        "monitoring.go",
        "multi_instance.go",
        "panel.go",
        "panel_options.go",
        "prometheus.go",
        "prune.go",
        "util.go",
        "variables.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/monitoring/monitoring",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/grafana-tools/sdk",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/prometheus/common/model",
        "//vendor/github.com/prometheus/prometheus/model/labels",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/pointers",
        "//vendor/github.com/sourcegraph/sourcegraph/monitoring/grafanaclient",
        "//vendor/github.com/sourcegraph/sourcegraph/monitoring/monitoring/internal/grafana",
        "//vendor/github.com/sourcegraph/sourcegraph/monitoring/monitoring/internal/promql",
        "//vendor/golang.org/x/text/cases",
        "//vendor/golang.org/x/text/language",
        "//vendor/gopkg.in/yaml.v2:yaml_v2",
    ],
)

go_test(
    name = "monitoring_test",
    timeout = "short",
    srcs = [
        "generator_test.go",
        "variables_test.go",
    ],
    embed = [":monitoring"],
    deps = [
        "//vendor/github.com/prometheus/prometheus/model/labels",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/sourcegraph/sourcegraph/monitoring/definitions",
        "//vendor/github.com/sourcegraph/sourcegraph/monitoring/monitoring",
        "//vendor/github.com/stretchr/testify/assert",
    ],
)
