load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "background",
    srcs = [
        "action.go",
        "background.go",
        "email.go",
        "metrics.go",
        "slack.go",
        "test_mocks.go",
        "webhook.go",
        "workers.go",
    ],
    embedsrcs = [
        "email_template.html.tmpl",
        "email_template.txt.tmpl",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/codemonitors/background",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/actor",
        "//internal/api",
        "//internal/codemonitors",
        "//internal/conf",
        "//internal/database",
        "//internal/database/basestore",
        "//internal/errcode",
        "//internal/featureflag",
        "//internal/gitserver/gitdomain",
        "//internal/goroutine",
        "//internal/httpcli",
        "//internal/observation",
        "//internal/search/result",
        "//internal/txemail",
        "//internal/txemail/txtypes",
        "//internal/types",
        "//internal/workerutil",
        "//internal/workerutil/dbworker",
        "//internal/workerutil/dbworker/store",
        "//vendor/github.com/graph-gophers/graphql-go/relay",
        "//vendor/github.com/keegancsmith/sqlf",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/slack-go/slack",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
    ],
)

go_test(
    name = "background_test",
    timeout = "short",
    srcs = [
        "email_test.go",
        "slack_test.go",
        "webhook_test.go",
        "workers_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":background"],
    tags = [
        # Test requires localhost database
        "requires-network",
    ],
    deps = [
        "//internal/conf",
        "//internal/database",
        "//internal/database/dbtest",
        "//internal/httpcli",
        "//internal/search/result",
        "//internal/txemail",
        "//schema",
        "//vendor/github.com/graph-gophers/graphql-go/relay",
        "//vendor/github.com/hexops/autogold/v2:autogold",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/stretchr/testify/require",
    ],
)
