load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "cloudkms",
    srcs = [
        "cloud_kms.go",
        "metrics.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/encryption/cloudkms",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/encryption",
        "//internal/encryption/envelope",
        "//internal/encryption/wrapper",
        "//schema",
        "//vendor/cloud.google.com/go/kms/apiv1",
        "//vendor/cloud.google.com/go/kms/apiv1/kmspb",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/prometheus/client_golang/prometheus/promauto",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/google.golang.org/api/option",
        "//vendor/google.golang.org/protobuf/types/known/wrapperspb",
    ],
)

go_test(
    name = "cloudkms_test",
    srcs = ["cloud_kms_test.go"],
    data = glob(["testdata/**"]),
    embed = [":cloudkms"],
    deps = [
        "//internal/encryption/envelope",
        "//internal/httpcli",
        "//internal/httptestutil",
        "//vendor/cloud.google.com/go/kms/apiv1",
        "//vendor/cloud.google.com/go/kms/apiv1/kmspb",
        "//vendor/github.com/dnaeon/go-vcr/cassette",
        "//vendor/github.com/dnaeon/go-vcr/recorder",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/google.golang.org/api/option",
        "//vendor/google.golang.org/api/option/internaloption",
        "//vendor/google.golang.org/api/transport/http",
        "//vendor/google.golang.org/protobuf/types/known/wrapperspb",
    ],
)
