load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "reposource",
    srcs = [
        "awscodecommit.go",
        "bitbucketcloud.go",
        "bitbucketserver.go",
        "common.go",
        "custom.go",
        "github.go",
        "gitlab.go",
        "gitolite.go",
        "go_modules.go",
        "jvm_packages.go",
        "npm_packages.go",
        "other.go",
        "package.go",
        "package_version.go",
        "perforce.go",
        "python_packages.go",
        "ruby_packages.go",
        "rust_packages.go",
        "versioned_package.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/conf/reposource",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/api",
        "//internal/conf",
        "//internal/conf/conftypes",
        "//internal/extsvc",
        "//internal/lazyregexp",
        "//schema",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/inconshreveable/log15",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/golang.org/x/mod/module",
        "//vendor/golang.org/x/mod/semver",
    ],
)

go_test(
    name = "reposource_test",
    timeout = "short",
    srcs = [
        "awscodecommit_test.go",
        "bitbucketcloud_test.go",
        "bitbucketserver_test.go",
        "common_test.go",
        "custom_test.go",
        "github_test.go",
        "gitlab_test.go",
        "gitolite_test.go",
        "go_modules_test.go",
        "jvm_packages_test.go",
        "npm_packages_test.go",
        "other_test.go",
    ],
    embed = [":reposource"],
    deps = [
        "//internal/api",
        "//schema",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/golang.org/x/mod/module",
    ],
)
