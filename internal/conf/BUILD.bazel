load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "conf",
    srcs = [
        "auth.go",
        "batch_changes.go",
        "client.go",
        "cody_validators.go",
        "computed.go",
        "conf.go",
        "diff.go",
        "grpc.go",
        "helpers.go",
        "init.go",
        "log_sinks.go",
        "parse.go",
        "server.go",
        "service_watcher.go",
        "store.go",
        "validate.go",
        "validate_custom.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/conf",
    visibility = ["//:__subpackages__"],
    deps = [
        "//cmd/frontend/envvar",
        "//internal/accesstoken",
        "//internal/api/internalapi",
        "//internal/conf/confdefaults",
        "//internal/conf/conftypes",
        "//internal/conf/deploy",
        "//internal/env",
        "//internal/hashutil",
        "//internal/httpcli",
        "//internal/jsonc",
        "//internal/license",
        "//internal/src-cli",
        "//internal/version",
        "//schema",
        "//vendor/github.com/getsentry/sentry-go",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/hashicorp/cronexpr",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/sourcegraph/jsonx",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/pointers",
        "//vendor/github.com/xeipuuv/gojsonschema",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/status",
    ],
)

go_test(
    name = "conf_test",
    timeout = "short",
    srcs = [
        "auth_test.go",
        "client_test.go",
        "computed_test.go",
        "diff_test.go",
        "grpc_test.go",
        "mocks_test.go",
        "validate_test.go",
    ],
    embed = [":conf"],
    deps = [
        "//cmd/frontend/envvar",
        "//internal/api/internalapi",
        "//internal/conf/conftypes",
        "//internal/conf/deploy",
        "//internal/license",
        "//schema",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/pointers",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/github.com/stretchr/testify/require",
    ],
)
