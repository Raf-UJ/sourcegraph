load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "uploadstore",
    srcs = [
        "config.go",
        "expirer.go",
        "gcs_api.go",
        "gcs_client.go",
        "lazy_client.go",
        "observability.go",
        "pool.go",
        "reader.go",
        "s3_api.go",
        "s3_client.go",
        "store.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/uploadstore",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/goroutine",
        "//internal/metrics",
        "//internal/observation",
        "//vendor/cloud.google.com/go/storage",
        "//vendor/github.com/aws/aws-sdk-go-v2/aws",
        "//vendor/github.com/aws/aws-sdk-go-v2/config",
        "//vendor/github.com/aws/aws-sdk-go-v2/credentials",
        "//vendor/github.com/aws/aws-sdk-go-v2/feature/s3/manager",
        "//vendor/github.com/aws/aws-sdk-go-v2/service/s3",
        "//vendor/github.com/aws/aws-sdk-go-v2/service/s3/types",
        "//vendor/github.com/inconshreveable/log15",
        "//vendor/github.com/sourcegraph/conc/pool",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/iterator",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/google.golang.org/api/iterator",
        "//vendor/google.golang.org/api/option",
    ],
)

go_test(
    name = "uploadstore_test",
    timeout = "short",
    srcs = [
        "config_test.go",
        "gcs_client_test.go",
        "mocks_test.go",
        "s3_client_test.go",
        "store_test.go",
    ],
    embed = [":uploadstore"],
    deps = [
        "//internal/observation",
        "//vendor/cloud.google.com/go/storage",
        "//vendor/github.com/aws/aws-sdk-go-v2/aws",
        "//vendor/github.com/aws/aws-sdk-go-v2/service/s3",
        "//vendor/github.com/aws/aws-sdk-go-v2/service/s3/types",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/inconshreveable/log15",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/google.golang.org/api/iterator",
    ],
)
