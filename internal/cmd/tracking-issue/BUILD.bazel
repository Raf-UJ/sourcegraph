load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "tracking-issue_lib",
    srcs = [
        "api.go",
        "context.go",
        "dedup.go",
        "emoji.go",
        "issue.go",
        "issue_loader.go",
        "labels.go",
        "main.go",
        "matcher.go",
        "pull_request.go",
        "render.go",
        "resolve.go",
        "search.go",
        "strings.go",
        "time.go",
        "update.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/cmd/tracking-issue",
    visibility = ["//visibility:private"],
    deps = [
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/machinebox/graphql",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/golang.org/x/oauth2",
    ],
)

go_binary(
    name = "tracking-issue",
    embed = [":tracking-issue_lib"],
    visibility = ["//:__subpackages__"],
)

go_test(
    name = "tracking-issue_test",
    timeout = "short",
    srcs = ["main_test.go"],
    data = glob(["testdata/**"]),
    embed = [":tracking-issue_lib"],
    deps = [
        "//internal/testutil",
        "//vendor/github.com/machinebox/graphql",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/golang.org/x/oauth2",
    ],
)
