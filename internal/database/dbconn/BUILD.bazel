load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "dbconn",
    srcs = [
        "bulk_insertion.go",
        "config.go",
        "connect.go",
        "connection_updater.go",
        "connector.go",
        "dynamic_metadata.go",
        "hooks_combine.go",
        "hooks_metrics.go",
        "metrics.go",
        "open.go",
        "postgres_version.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/database/dbconn",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/database/dbconn/rds",
        "//internal/env",
        "//internal/lazyregexp",
        "//vendor/github.com/XSAM/otelsql",
        "//vendor/github.com/jackc/pgx/v4:pgx",
        "//vendor/github.com/jackc/pgx/v4/stdlib",
        "//vendor/github.com/lib/pq",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/prometheus/client_golang/prometheus/promauto",
        "//vendor/github.com/qustavo/sqlhooks/v2:sqlhooks",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/output",
        "//vendor/go.opentelemetry.io/otel",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/go.opentelemetry.io/otel/trace",
    ],
)

go_test(
    name = "dbconn_test",
    timeout = "short",
    srcs = ["config_test.go"],
    embed = [":dbconn"],
    deps = ["//vendor/github.com/sourcegraph/log/logtest"],
)
