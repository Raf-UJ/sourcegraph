load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "tracer",
    srcs = [
        "conf.go",
        "doc.go",
        "logged_otel.go",
        "otel.go",
        "policy_sampler.go",
        "tracer.go",
        "watch.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/tracer",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/conf",
        "//internal/conf/conftypes",
        "//internal/env",
        "//internal/hostname",
        "//internal/trace/policy",
        "//internal/tracer/oteldefaults",
        "//internal/tracer/oteldefaults/exporters",
        "//internal/version",
        "//schema",
        "//vendor/github.com/go-logr/logr",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/go.opentelemetry.io/otel",
        "//vendor/go.opentelemetry.io/otel/sdk/resource",
        "//vendor/go.opentelemetry.io/otel/sdk/trace",
        "//vendor/go.opentelemetry.io/otel/sdk/trace/tracetest",
        "//vendor/go.opentelemetry.io/otel/semconv/v1.4.0:v1_4_0",
        "//vendor/go.opentelemetry.io/otel/trace",
        "//vendor/go.uber.org/automaxprocs/maxprocs",
    ],
)

go_test(
    name = "tracer_test",
    timeout = "short",
    srcs = [
        "policy_sampler_test.go",
        "watch_test.go",
    ],
    embed = [":tracer"],
    deps = [
        "//internal/trace/policy",
        "//schema",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/go.opentelemetry.io/otel/sdk/trace",
        "//vendor/go.opentelemetry.io/otel/sdk/trace/tracetest",
        "//vendor/go.opentelemetry.io/otel/trace",
    ],
)
