load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "jobutil",
    srcs = [
        "alert.go",
        "combinators.go",
        "exhaustive_job.go",
        "expression_job.go",
        "filter_file_contains.go",
        "filter_file_contributor.go",
        "job.go",
        "limit.go",
        "log_job.go",
        "repo_pager_job.go",
        "repos.go",
        "sanitize_job.go",
        "select.go",
        "sub_repo_perms_job.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/search/job/jobutil",
    visibility = ["//:__subpackages__"],
    deps = [
        "//cmd/searcher/protocol",
        "//internal/actor",
        "//internal/api",
        "//internal/authz",
        "//internal/conf",
        "//internal/database",
        "//internal/deviceid",
        "//internal/endpoint",
        "//internal/featureflag",
        "//internal/gitserver",
        "//internal/gitserver/gitdomain",
        "//internal/own/search",
        "//internal/search",
        "//internal/search/alert",
        "//internal/search/commit",
        "//internal/search/filter",
        "//internal/search/job",
        "//internal/search/keyword",
        "//internal/search/limits",
        "//internal/search/query",
        "//internal/search/repos",
        "//internal/search/result",
        "//internal/search/searchcontexts",
        "//internal/search/searcher",
        "//internal/search/smartsearch",
        "//internal/search/streaming",
        "//internal/search/structural",
        "//internal/search/zoekt",
        "//internal/telemetry",
        "//internal/telemetry/teestore",
        "//internal/telemetry/telemetryrecorder",
        "//internal/trace",
        "//internal/usagestats",
        "//schema",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/sourcegraph/conc/pool",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/iterator",
        "//vendor/github.com/sourcegraph/zoekt/query",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/go.uber.org/atomic",
        "//vendor/golang.org/x/exp/slices",
    ],
)

go_test(
    name = "jobutil_test",
    timeout = "short",
    srcs = [
        "alert_test.go",
        "combinators_test.go",
        "exhaustive_job_test.go",
        "expression_job_test.go",
        "filter_file_contains_test.go",
        "filter_file_contributor_test.go",
        "job_test.go",
        "log_job_test.go",
        "repo_pager_job_test.go",
        "repos_test.go",
        "sanitize_job_test.go",
        "select_test.go",
        "sub_repo_perms_job_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":jobutil"],
    deps = [
        "//cmd/searcher/protocol",
        "//internal/actor",
        "//internal/api",
        "//internal/authz",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/endpoint",
        "//internal/errcode",
        "//internal/gitserver",
        "//internal/gitserver/gitdomain",
        "//internal/search",
        "//internal/search/backend",
        "//internal/search/filter",
        "//internal/search/job",
        "//internal/search/job/mockjob",
        "//internal/search/job/printer",
        "//internal/search/limits",
        "//internal/search/query",
        "//internal/search/result",
        "//internal/search/searcher",
        "//internal/search/streaming",
        "//internal/search/zoekt",
        "//internal/telemetry/telemetrytest",
        "//internal/types",
        "//schema",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/google/go-cmp/cmp/cmpopts",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/hexops/autogold/v2:autogold",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/zoekt/query",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/golang.org/x/exp/slices",
        "//vendor/golang.org/x/sync/errgroup",
    ],
)
