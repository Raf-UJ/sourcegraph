load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "zoekt",
    srcs = [
        "indexed_search.go",
        "query.go",
        "reindex.go",
        "symbol_search.go",
        "zoekt.go",
        "zoekt_global.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/search/zoekt",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/actor",
        "//internal/api",
        "//internal/conf",
        "//internal/database",
        "//internal/httpcli",
        "//internal/search",
        "//internal/search/backend",
        "//internal/search/filter",
        "//internal/search/job",
        "//internal/search/limits",
        "//internal/search/query",
        "//internal/search/result",
        "//internal/search/streaming",
        "//internal/trace",
        "//internal/types",
        "//vendor/github.com/RoaringBitmap/roaring",
        "//vendor/github.com/go-enry/go-enry/v2:go-enry",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/zoekt",
        "//vendor/github.com/sourcegraph/zoekt/query",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/go.uber.org/atomic",
    ],
)

go_test(
    name = "zoekt_test",
    timeout = "short",
    srcs = [
        "indexed_search_test.go",
        "query_test.go",
    ],
    embed = [":zoekt"],
    deps = [
        "//internal/api",
        "//internal/search",
        "//internal/search/backend",
        "//internal/search/filter",
        "//internal/search/job",
        "//internal/search/query",
        "//internal/search/result",
        "//internal/search/streaming",
        "//internal/trace",
        "//internal/types",
        "//vendor/github.com/RoaringBitmap/roaring",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/google/go-cmp/cmp/cmpopts",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/hexops/autogold/v2:autogold",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/zoekt",
        "//vendor/github.com/sourcegraph/zoekt/query",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/golang.org/x/exp/slices",
    ],
)
