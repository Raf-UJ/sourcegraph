load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//dev:go_defs.bzl", "go_test")

go_library(
    name = "service",
    srcs = [
        "matchcsv.go",
        "search.go",
        "searcher.go",
        "service.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/search/exhaustive/service",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/actor",
        "//internal/api",
        "//internal/conf",
        "//internal/database",
        "//internal/gitserver/gitdomain",
        "//internal/metrics",
        "//internal/observation",
        "//internal/search",
        "//internal/search/client",
        "//internal/search/exhaustive/store",
        "//internal/search/exhaustive/types",
        "//internal/search/job",
        "//internal/search/job/jobutil",
        "//internal/search/query",
        "//internal/search/repos",
        "//internal/search/result",
        "//internal/search/streaming",
        "//internal/types",
        "//internal/uploadstore",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/iterator",
        "//vendor/go.opentelemetry.io/otel/attribute",
    ],
)

go_test(
    name = "service_test",
    srcs = [
        "search_test.go",
        "searcher_test.go",
        "service_test.go",
    ],
    embed = [":service"],
    deps = [
        "//internal/actor",
        "//internal/api",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/endpoint",
        "//internal/featureflag",
        "//internal/gitserver",
        "//internal/gitserver/gitdomain",
        "//internal/search",
        "//internal/search/backend",
        "//internal/search/client",
        "//internal/search/exhaustive/types",
        "//internal/search/job",
        "//internal/search/result",
        "//internal/search/searcher",
        "//internal/search/streaming",
        "//internal/types",
        "//internal/uploadstore/mocks",
        "//vendor/github.com/hexops/autogold/v2:autogold",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/iterator",
        "//vendor/github.com/sourcegraph/zoekt",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/golang.org/x/exp/slices",
    ],
)
