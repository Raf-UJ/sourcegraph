load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "client",
    srcs = [
        "client.go",
        "mocks_temp.go",
        "telemetry.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/search/client",
    visibility = ["//:__subpackages__"],
    deps = [
        "//cmd/frontend/envvar",
        "//internal/actor",
        "//internal/conf",
        "//internal/database",
        "//internal/featureflag",
        "//internal/gitserver",
        "//internal/search",
        "//internal/search/job",
        "//internal/search/job/jobutil",
        "//internal/search/query",
        "//internal/search/searchcontexts",
        "//internal/search/streaming",
        "//internal/settings",
        "//internal/trace",
        "//schema",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/prometheus/client_golang/prometheus/promauto",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/go.opentelemetry.io/otel/attribute",
    ],
)

go_test(
    name = "client_test",
    timeout = "short",
    srcs = ["client_test.go"],
    embed = [":client"],
    deps = [
        "//internal/actor",
        "//internal/conf",
        "//internal/database/dbmocks",
        "//internal/search/query",
        "//internal/types",
        "//schema",
        "//vendor/github.com/grafana/regexp",
        "//vendor/github.com/sourcegraph/log/logtest",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/stretchr/testify/require",
    ],
)
