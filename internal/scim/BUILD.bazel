load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "scim",
    srcs = [
        "init.go",
        "mock_db.go",
        "resourceHandler.go",
        "resource_create.go",
        "resource_delete.go",
        "resource_get.go",
        "resource_patch.go",
        "resource_replace.go",
        "test_util.go",
        "user.go",
        "user_schema.go",
        "user_service.go",
        "user_update_action.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/scim",
    visibility = ["//:__subpackages__"],
    deps = [
        "//cmd/frontend/auth",
        "//cmd/frontend/globals",
        "//internal/authz",
        "//internal/conf",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/env",
        "//internal/extsvc",
        "//internal/goroutine",
        "//internal/licensing",
        "//internal/observation",
        "//internal/scim/filter",
        "//internal/txemail",
        "//internal/txemail/txtypes",
        "//internal/types",
        "//vendor/github.com/elimity-com/scim",
        "//vendor/github.com/elimity-com/scim/errors",
        "//vendor/github.com/elimity-com/scim/optional",
        "//vendor/github.com/elimity-com/scim/schema",
        "//vendor/github.com/scim2/filter-parser/v2:filter-parser",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/k8s.io/utils/strings/slices",
    ],
)

go_test(
    name = "scim_test",
    timeout = "short",
    srcs = [
        "init_test.go",
        "user_create_test.go",
        "user_get_test.go",
        "user_patch_test.go",
        "user_replace_test.go",
    ],
    embed = [":scim"],
    deps = [
        "//internal/conf",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/license",
        "//internal/licensing",
        "//internal/observation",
        "//internal/txemail",
        "//internal/types",
        "//schema",
        "//vendor/github.com/elimity-com/scim",
        "//vendor/github.com/elimity-com/scim/errors",
        "//vendor/github.com/scim2/filter-parser/v2:filter-parser",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/pointers",
        "//vendor/github.com/stretchr/testify/assert",
    ],
)
