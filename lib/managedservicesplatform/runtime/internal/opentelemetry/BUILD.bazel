load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "opentelemetry",
    srcs = [
        "logger.go",
        "metrics.go",
        "opentelemetry.go",
        "tracing.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/lib/managedservicesplatform/runtime/internal/opentelemetry",
    visibility = ["//lib/managedservicesplatform/runtime:__subpackages__"],
    deps = [
        "//vendor/github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric",
        "//vendor/github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/trace",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/github.com/sourcegraph/conc",
        "//vendor/github.com/sourcegraph/log",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/go.opentelemetry.io/contrib/detectors/gcp",
        "//vendor/go.opentelemetry.io/contrib/propagators/jaeger",
        "//vendor/go.opentelemetry.io/contrib/propagators/ot",
        "//vendor/go.opentelemetry.io/otel",
        "//vendor/go.opentelemetry.io/otel/exporters/otlp/otlptrace",
        "//vendor/go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc",
        "//vendor/go.opentelemetry.io/otel/exporters/prometheus",
        "//vendor/go.opentelemetry.io/otel/propagation",
        "//vendor/go.opentelemetry.io/otel/sdk/metric",
        "//vendor/go.opentelemetry.io/otel/sdk/resource",
        "//vendor/go.opentelemetry.io/otel/sdk/trace",
        "//vendor/go.opentelemetry.io/otel/semconv/v1.21.0:v1_21_0",
        "//vendor/go.opentelemetry.io/otel/trace",
    ],
)
