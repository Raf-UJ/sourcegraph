load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "buildchecker_lib",
    srcs = [
        "branch.go",
        "checker.go",
        "failures.go",
        "history.go",
        "main.go",
        "report.go",
        "slack.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/dev/buildchecker",
    visibility = ["//visibility:private"],
    deps = [
        "//dev/team",
        "//vendor/github.com/buildkite/go-buildkite/v3/buildkite",
        "//vendor/github.com/google/go-github/v55/github",
        "//vendor/github.com/honeycombio/libhoney-go",
        "//vendor/github.com/slack-go/slack",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/errors",
        "//vendor/github.com/sourcegraph/sourcegraph/lib/pointers",
        "//vendor/golang.org/x/oauth2",
    ],
)

go_binary(
    name = "buildchecker",
    embed = [":buildchecker_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "buildchecker_test",
    timeout = "short",
    srcs = [
        "branch_test.go",
        "checker_test.go",
        "failures_test.go",
        "history_test.go",
        "slack_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":buildchecker_lib"],
    deps = [
        "//dev/team",
        "//internal/httptestutil",
        "//vendor/github.com/buildkite/go-buildkite/v3/buildkite",
        "//vendor/github.com/dnaeon/go-vcr/cassette",
        "//vendor/github.com/google/go-github/v55/github",
        "//vendor/github.com/hexops/autogold/v2:autogold",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/golang.org/x/oauth2",
    ],
)
